/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.01;

vertices
(
// bump
    (0       -0  -5)
    (20.32   -0  -5)
    (20.32   61  -5)
    (0       61  -5)
    (0       -0   5)
    (20.32   -0   5)
    (20.32   61   5)
    (0       61   5)
// pre bump
    (-200   -0  -5)
    (-200   61  -5)
    (-200   -0   5)
    (-200   61   5)
// post bump
    (400    -0  -5)
    (400    61  -5)
    (400    -0   5)
    (400    61   5)
);

blocks
(
    hex (0 1 2 3  4 5 6  7  ) ( 208  170 1) simpleGrading ( 1 60 1)
    hex (8 0 3 9 10 4 7 11  ) ( 2000 170 1) simpleGrading ( 1 60 1)
    hex (1 12 13 2 5 14 15 6) ( 3792 170 1) simpleGrading ( 1 60 1)
);

edges
(
// include bump arcs
   arc 0 1 (10.16 1.91 -5) 
   arc 4 5 (10.16 1.91  5) 
);

boundary
(
    my-velocity-inlet
    {
        type patch;
        faces
        (
	   (10 11 9 8)
        );
    }
    my-pressure-outlet
    {
        type patch;
        faces
        (
           (14 12 13 15)
        );
    }
    my-wall
    {
        type wall;
        faces
        (
           (8 0 4 10 )
           (4 0 1 5  )
           (5 1 12 14)
        );
    }
    frontAndBackPlanes
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
            (8 9 3 0)
            (10 4 7 11)
            (1 2 13 12)
            (5 14 15 6)
        );
    }
    freeSurf
    {   
        type symmetry;
        faces
        (
            (11 7 3 9 )
            (7 6 2 3  )
            (6 15 13 2)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
